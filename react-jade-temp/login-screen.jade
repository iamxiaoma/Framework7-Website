extends ../src/jade/_internal-template

block vars
  - var activeLink = 'react';
  - var title = 'Login Screen React Component | Framework7 React Documentation';

block content
  .docs-wrap
    .docs-nav
      include ./_docs-react-menu
    .docs-content
      h1 Login Screen React Component
      p Picker Modal is a special overlay type which is similar to Picker/Calendar's overlay. Such modal allows to create custom picker overlays with custom content.
      p Login Screen React component represents <a href="../docs/login-screen.html">Login Screen</a> component.
      h2 Usage example
      pre
        code
          :code
            <!-- Login Screen -->
            <LoginScreen>
              <!-- Login Screen content goes here -->
            </LoginScreen>
      p Renders to:
      pre
        code
          :code
            <!-- Login Screen -->
            <div class="login-screen">
              <!-- Login Screen content goes here -->
            </div>
      h3 Full Login Screen Layout
      p According to <a href="../docs/login-screen.html#login-screen-layout">Login Screen Layout</a> here is the recommended Login Screen layout structure:
      pre
        code
          :code
            <LoginScreen>
              <View>
                <Pages>
                  <Page loginScreen>
                    <LoginScreenTitle>My App</LoginScreenTitle>
                    <List form>
                      <ListItem>
                        <FormLabel>Username</FormLabel>
                        <FormInput name="username" placeholder="Username"></FormInput>
                      </ListItem>
                      <ListItem>
                        <FormLabel>Password</FormLabel>
                        <FormInput name="password" type="password" placeholder="Password"></FormInput>
                      </ListItem>
                    </List>
                    <List>
                      <ListButton title="Sign In" closeLoginScreen></ListButton>
                      <ListLabel>
                        <p>Click Sign In to close Login Screen</p>
                      </ListLabel>
                    </List>
                  </Page>
                </Pages>
              </View>
            </LoginScreen>
      p Where:
      ul
        li <code>&lt;LoginScreenTitle&gt;My App&lt;/LoginScreenTitle&gt;</code> - additional component with Login Screen title
        li <code>&lt;Page loginScreen&gt;</code> - additional boolean <b>login-screen</b> property on page component to add extra styling to page form elements
      h2 Properties
      table.params-table
        thead
          tr
            th Prop
            th Type
            th Description
        tbody
          tr
            td theme
            td string
            td Login Screen theme color. One of <a href="../docs/color-themes.html">default colors</a>
          tr
            td layout
            td string
            td Login Screen layout theme. One of <a href="../docs/color-themes.html#layout-themes">default layout themes</a>
          tr
            td opened
            td boolean
            td Allows to open/close Login Screen and set its initial state
      h2 Methods
      table.methods-table
        tr
          td .open(<span>animated</span>)
          td Open login screen
        tr
          td .close(<span>animated</span>)
          td Close login screen
      h2 Event Properties
      table.events-table
        thead
          tr
            th Event
            th Description
        tbody
          tr
            td loginscreen:open
            td Event will be triggered when Login Screen starts its opening animation
          tr
            td loginscreen:opened
            td Event will be triggered after Login Screen completes its opening animation
          tr
            td loginscreen:close
            td Event will be triggered when Login Screen starts its closing animation
          tr
            td loginscreen:closed
            td Event will be triggered after Login Screen completes its closing animation
      h2 Open and close Login Screen
      p You can control Login Screen state, open and closing it:
      ul
        li using its <a href="../docs/login-screen.html#using-javascript">JavaScript API</a>
        li by passing <b>true</b> or <b>false</b> to its <code>opened</code> prop
        li by clicking on <a href="link.html">Link</a> or <a href="button.html">Button</a> with relevant <code>openLoginScreen</code> property (to open it) and <code>closeLoginScreen</code> property to close it
