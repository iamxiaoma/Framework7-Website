extends ../_docs-template

block vars
  - var activeLink = 'react';
  - var title = 'Checkbox React Component | Framework7 React Documentation';

block content
  include ../_docs-demo-device

  .docs-nav
    include ../_docs-menu-react
  .docs-content

    h1 Checkbox React Component
    ul.docs-index
    p Checkbox React component represents <a href="../docs/checkbox.html">Checkbox</a> component.
    h2 Checkbox Components
    p There are following components included:
    ul
      li <code><b>Checkbox</b></code> / <code><b>F7Checkbox</b></code>
    h2 Checkbox Properties
    table.params-table
      thead
        tr
          th Prop
          th Type
          th Default
          th Description
      tbody
        tr
          th(colspan="4") &lt;Checkbox&gt; properties
        tr
          td checked
          td boolean
          td
          td Defines whether the checkbox input is checked or not
        tr
          td defaultChecked
          td boolean
          td
          td Defines whether the checkbox input is checked or not, for the case if it is uncontrolled component
        tr
          td indeterminate
          td boolean
          td
          td Defines whether the checkbox input is in indeterminate state or not
        tr
          td name
          td string<br>number
          td
          td Checkbox input name
        tr
          td value
          td string<br>number<br>boolean
          td
          td Checkbox input value
        tr
          td disabled
          td boolean
          td
          td Defines whether the checkbox input is disabled
        tr
          td readonly
          td boolean
          td
          td Defines whether the checkbox input is readonly
    h2 Checkbox Events
    table.events-table
      thead
        tr
          th Event
          th Description
      tbody
        tr
          th(colspan="2") &lt;Checkbox&gt; events
        tr
          td change
          td Event will be triggered when checkbox state changed
    h2 Checkboxes List
    p Checkboxes List is not a separate component, but just a particular case of using <code><a href="list-view.html">&lt;List&gt;</a></code>, <code><a href="list-item.html">&lt;ListItem&gt;</a></code>.
    :code(lang="jsx")
          <List>
            <!-- Additional "checkbox" prop to enable checkbox list item -->
            <ListItem checkbox value="check_1" checked title="Checkbox 1"></ListItem>
            <ListItem checkbox value="check_2" title="Checkbox 2"></ListItem>
          </List>

    .with-device
      h2(data-device-preview="../docs-demos/react/checkbox.html") Examples
      h4 Inline
      :code(lang="jsx")
        <Block strong>
          <p>Lorem <Checkbox name="checkbox-1"></Checkbox> ipsum dolor sit amet, consectetur adipisicing elit. Alias beatae illo nihil aut eius commodi sint eveniet aliquid eligendi <Checkbox name="checkbox-2" defaultChecked></Checkbox> ad delectus impedit tempore nemo, enim vel praesentium consequatur nulla mollitia!</p>
        </Block>

      h4 Checkbox Group
      :code(lang="jsx")
        <List>
          <ListItem checkbox title="Books" name="demo-checkbox" defaultChecked></ListItem>
          <ListItem checkbox title="Movies" name="demo-checkbox"></ListItem>
          <ListItem checkbox title="Food" name="demo-checkbox"></ListItem>
          <ListItem checkbox title="Drinks" name="demo-checkbox"></ListItem>
        </List>
      h4 Indeterminate State
      :code(lang="jsx")
        export default class extends React.Component {
          constructor() {
            super();

            this.state = {
              movies: ['Movie 1'],
            };
          }
          onMovieChange(e) {
            var self = this;
            var value = e.target.value;
            var movies = self.state.movies;
            if (e.target.checked) {
              movies.push(value);
            } else {
              movies.splice(movies.indexOf(value), 1);
            }
            self.setState({ movies: movies });
          }
          onMoviesChange(e) {
            var self = this;
            var movies = self.state.movies;
            if (movies.length === 1 || movies.length === 0) {
              movies = ['Movie 1', 'Movie 2'];
            } else if (movies.length === 2) {
              movies = [];
            }
            self.setState({ movies: movies });
          }
          render() {
            return (
              ...
              <BlockTitle>Indeterminate State</BlockTitle>
              <List>
                <ListItem
                  checkbox
                  title="Movies"
                  name="demo-checkbox"
                  checked={this.state.movies.length === 2}
                  indeterminate={this.state.movies.length === 1}
                  onChange={(e) => this.onMoviesChange(e)}
                >
                  <ul slot="root">
                    <ListItem
                      checkbox
                      title="Movie 1"
                      name="demo-checkbox"
                      value="Movie 1"
                      checked={this.state.movies.indexOf('Movie 1') >= 0}
                      onChange={(e) => this.onMovieChange(e)}
                    ></ListItem>
                    <ListItem
                      checkbox
                      title="Movie 2"
                      name="demo-checkbox"
                      value="Movie 2"
                      checked={this.state.movies.indexOf('Movie 2') >= 0}
                      onChange={(e) => this.onMovieChange(e)}
                    ></ListItem>
                  </ul>
                </ListItem>
              </List>
              ...
            )
          }
        }
      h4 With Media Lists
      :code(lang="jsx")
        <List mediaList>
          <ListItem
            checkbox
            defaultChecked
            name="demo-media-checkbox"
            title="Facebook"
            after="17:14"
            subtitle="New messages from John Doe"
            text="Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla sagittis tellus ut turpis condimentum, ut dignissim lacus tincidunt. Cras dolor metus, ultrices condimentum sodales sit amet, pharetra sodales eros. Phasellus vel felis tellus. Mauris rutrum ligula nec dapibus feugiat. In vel dui laoreet, commodo augue id, pulvinar lacus."
          ></ListItem>
          <ListItem
            checkbox
            name="demo-media-checkbox"
            title="John Doe (via Twitter)"
            after="17:11"
            subtitle="John Doe (@_johndoe) mentioned you on Twitter!"
            text="Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla sagittis tellus ut turpis condimentum, ut dignissim lacus tincidunt. Cras dolor metus, ultrices condimentum sodales sit amet, pharetra sodales eros. Phasellus vel felis tellus. Mauris rutrum ligula nec dapibus feugiat. In vel dui laoreet, commodo augue id, pulvinar lacus."
          ></ListItem>
          <ListItem
            checkbox
            name="demo-media-checkbox"
            title="Facebook"
            after="16:48"
            subtitle="New messages from John Doe"
            text="Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla sagittis tellus ut turpis condimentum, ut dignissim lacus tincidunt. Cras dolor metus, ultrices condimentum sodales sit amet, pharetra sodales eros. Phasellus vel felis tellus. Mauris rutrum ligula nec dapibus feugiat. In vel dui laoreet, commodo augue id, pulvinar lacus."
          ></ListItem>
          <ListItem
            checkbox
            name="demo-media-checkbox"
            title="John Doe (via Twitter)"
            after="15:32"
            subtitle="John Doe (@_johndoe) mentioned you on Twitter!"
            text="Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla sagittis tellus ut turpis condimentum, ut dignissim lacus tincidunt. Cras dolor metus, ultrices condimentum sodales sit amet, pharetra sodales eros. Phasellus vel felis tellus. Mauris rutrum ligula nec dapibus feugiat. In vel dui laoreet, commodo augue id, pulvinar lacus."
          ></ListItem>